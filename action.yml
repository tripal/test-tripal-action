# action.yml
name: 'Test Tripal Action'
description: 'Run automated testing for a Tripal extension module.'
inputs:
  directory-name:
    description: "The name of the directory your Tripal module or package was checked out into."
    required: true
  modules:
    description: "A space-separated list of module machine names indicating which modules to install before running tests."
    required: true
  php-version:
    description: "The version of PHP you would like tested. This must match one of the current PHP versions TripalDocker is available in (e.g. 8.0 and 8.1)."
    required: false
    default: '8.3'
  pgsql-version:
    description: "The version of PostgreSQL you would like your tests run against. This must match one of the current versions TripalDocker is available in (e.g. 13)."
    required: false
    default: '13'
  drupal-version:
    description: "The version of Drupal you would like your tests run against. This must match one of the current versions TripalDocker is available in (e.g. 9.4.x-dev, 9.5.x-dev)."
    required: false
    default: '10.2.x-dev'
  phpunit-command-options:
    description: "A string providing any options you would like added to the phpunit command."
    required: false
    default: ' '
  build-image:
    description: "Indicates whether you would like to build the docker based on your code (true) or pull an existing image (false)."
    required: true
    default: false
  dockerfile:
    description: "The relative path and file name for the dockerfile to use with build-image."
    required: true
    default: 'Dockerfile'
runs:
  using: "composite"
  steps:
      # Here we pull the development tripaldocker image for this combo
      - name: Pull TripalDocker Image
        if: ${{ inputs.build-image == 'false' }}
        shell: bash
        env:
          IMAGE_TAG: "drupal${{ inputs.drupal-version }}-php${{ inputs.php-version }}-pgsql${{ inputs.pgsql-version }}"
        run: |
          docker pull tripalproject/tripaldocker:$IMAGE_TAG
          docker image tag tripalproject/tripaldocker:$IMAGE_TAG testing:localdocker
      - name: Build Local Docker Image
        if: ${{ inputs.build-image == 'true' }}
        shell: bash
        run: |
          TRIPALDOCKER="tripaldocker/Dockerfile-php${{ inputs.php-version }}-pgsql${{ inputs.pgsql-version }}"
          if [ -f "${{ inputs.dockerfile }}" ]; then
            docker build --tag=testing:localdocker \
              --build-arg drupalversion="${{ inputs.drupal-version }}" \
              --build-arg phpversion="${{ inputs.php-version }}" \
              --build-arg chadoschema='teacup' ./
          elif [ -f "$TRIPALDOCKER" ]; then
            docker build --tag=testing:localdocker \
              --build-arg drupalversion="${{ inputs.drupal-version }}" \
              --build-arg chadoschema='teacup' ./ \
              --file $TRIPALDOCKER
          fi
      # Just spin up docker the good ol' fashion way
      # mounting our currently checked out package inside the docker container.
      - name: Spin up Docker locally
        shell: bash
        run: |
          docker run --publish=80:80 --name=tripaldocker -tid \
            --volume=`pwd`:/var/www/drupal/web/modules/contrib/${{ inputs.directory-name }} testing:localdocker
      # Install the modules
      - name: Install our package in Docker
        if: "${{ inputs.modules != '' }}"
        shell: bash
        run: |
          docker exec tripaldocker service postgresql restart
          docker exec tripaldocker drush en ${{ inputs.modules }} --yes
      # Runs the PHPUnit tests.
      - name: Run PHPUnit Tests
        shell: bash
        env:
          SIMPLETEST_BASE_URL: "http://localhost"
          SIMPLETEST_DB: "pgsql://drupaladmin:drupaldevelopmentonlylocal@localhost/sitedb"
          BROWSER_OUTPUT_DIRECTORY: "/var/www/drupal/web/sites/default/files/simpletest"
        run: |
          docker exec tripaldocker service postgresql restart
          docker exec -e SIMPLETEST_BASE_URL=$SIMPLETEST_BASE_URL \
            -e SIMPLETEST_DB=$SIMPLETEST_DB \
            -e BROWSER_OUTPUT_DIRECTORY=$BROWSER_OUTPUT_DIRECTORY \
            --workdir=/var/www/drupal/web/modules/contrib/${{ inputs.directory-name }} \
            tripaldocker phpunit ${{ inputs.phpunit-command-options }}
